(this["webpackJsonpgoit-react-hw-03-phonebook"]=this["webpackJsonpgoit-react-hw-03-phonebook"]||[]).push([[0],{17:function(t,e,n){},19:function(t,e,n){"use strict";n.r(e);var a=n(1),s=n.n(a),i=n(11),c=n.n(i),o=(n(17),n(12)),r=n(7),l=n(3),u=n(4),d=n(6),b=n(5),m=n(21),h=n(8),f=n(2),p=n.n(f),j=n(0),_=function(t){Object(d.a)(n,t);var e=Object(b.a)(n);function n(){var t;Object(l.a)(this,n);for(var a=arguments.length,s=new Array(a),i=0;i<a;i++)s[i]=arguments[i];return(t=e.call.apply(e,[this].concat(s))).state={name:"",number:""},t.handleChange=function(e){var n=e.target,a=n.name,s=n.value;t.setState(Object(h.a)({},a,s))},t.handleSubmit=function(e){e.preventDefault(),t.props.onAddContact(Object(r.a)({},t.state)),t.setState({name:"",number:""})},t}return Object(u.a)(n,[{key:"render",value:function(){return Object(j.jsxs)("form",{className:p.a.TaskEditor,onSubmit:this.handleSubmit,children:[Object(j.jsxs)("label",{className:p.a.TaskEditor_label,children:["Name",Object(j.jsx)("input",{className:p.a.TaskEditor_input,type:"text",name:"name",value:this.state.name,onChange:this.handleChange,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \u0438 \u0442. \u043f.",required:!0})]}),Object(j.jsxs)("label",{className:p.a.TaskEditor_label,children:["Number",Object(j.jsx)("input",{className:p.a.TaskEditor_input,type:"text",name:"number",value:this.state.number,onChange:this.handleChange,pattern:"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})",title:"The phone number must be 11-12 digits long and can contain numbers, spaces, dashes, pot-bellied brackets and can start with +",required:!0})]}),Object(j.jsx)("button",{className:p.a.TaskEditor_button,type:"submit",children:"Add contact"})]})}}]),n}(a.Component),O=n(9),k=n.n(O),C=function(t){var e=t.contacts,n=t.onRemoveContact;return Object(j.jsx)("ul",{className:k.a.TaskList,children:e.map((function(t){return Object(j.jsxs)("li",{className:k.a.TaskList_item,children:[t.name+":"+t.number,Object(j.jsx)("button",{className:k.a.TaskList_button,type:"button",name:"delte",onClick:function(){return n(t.id)},children:"delete"})]},t.id)}))})},v=function(t){Object(d.a)(n,t);var e=Object(b.a)(n);function n(){var t;Object(l.a)(this,n);for(var a=arguments.length,s=new Array(a),i=0;i<a;i++)s[i]=arguments[i];return(t=e.call.apply(e,[this].concat(s))).state={filter:""},t.handleInputChange=function(e){t.setState({filter:e.target.value})},t.filterInputHandler=function(e){var n=t.props.onFilter;t.handleInputChange(e),n(e.target.value)},t}return Object(u.a)(n,[{key:"render",value:function(){return Object(j.jsx)("div",{children:Object(j.jsx)("input",{type:"text",placeholder:"search contact",name:"filter",value:this.state.filter,onChange:this.filterInputHandler})})}}]),n}(a.Component),g=function(t){Object(d.a)(n,t);var e=Object(b.a)(n);function n(){var t;Object(l.a)(this,n);for(var a=arguments.length,s=new Array(a),i=0;i<a;i++)s[i]=arguments[i];return(t=e.call.apply(e,[this].concat(s))).state={contacts:[{id:"id-1",name:"Rosie Simpson",number:"459-12-56"},{id:"id-2",name:"Hermione Kline",number:"443-89-12"},{id:"id-3",name:"Eden Clements",number:"645-17-79"},{id:"id-4",name:"Annie Copeland",number:"227-91-26"}],filter:""},t.addContact=function(e){if(t.state.contacts.map((function(t){return t.name})).includes(e.name))alert("".concat(e.name," is already in contacts"));else if(0===e.name.length)alert("Fields must be filled!");else{var n=Object(r.a)(Object(r.a)({},e),{},{id:Object(m.a)()});t.setState((function(t){return{contacts:[].concat(Object(o.a)(t.contacts),[n])}}))}},t.getVisibleContacts=function(){var e=t.state,n=e.contacts,a=e.filter;return n.filter((function(t){return t.name.toLowerCase().includes(a.toLowerCase())}))},t.filterHandler=function(e){t.setState((function(){return{filter:e}}))},t.removeContact=function(e){t.setState((function(t){return{contacts:t.contacts.filter((function(t){return t.id!==e}))}}))},t}return Object(u.a)(n,[{key:"componentDidMount",value:function(){var t=JSON.parse(localStorage.getItem("contacts"));t&&this.setState({contacts:t})}},{key:"componentDidUpdate",value:function(t,e){e.contacts!==this.state.contacts&&localStorage.setItem("contacts",JSON.stringify(this.state.contacts))}},{key:"render",value:function(){var t=this.getVisibleContacts();return Object(j.jsxs)("div",{children:[Object(j.jsx)("h1",{children:"Phonebook"}),Object(j.jsx)(_,{onAddContact:this.addContact}),Object(j.jsx)("h2",{children:"Contacts"}),Object(j.jsx)(v,{onFilter:this.filterHandler}),t.length>0&&Object(j.jsx)(C,{contacts:t,onRemoveContact:this.removeContact})]})}}]),n}(a.Component),T=function(t){t&&t instanceof Function&&n.e(3).then(n.bind(null,22)).then((function(e){var n=e.getCLS,a=e.getFID,s=e.getFCP,i=e.getLCP,c=e.getTTFB;n(t),a(t),s(t),i(t),c(t)}))};c.a.render(Object(j.jsx)(s.a.StrictMode,{children:Object(j.jsx)(g,{})}),document.getElementById("root")),T()},2:function(t,e,n){t.exports={TaskEditor:"form_TaskEditor__NTlSj",TaskEditor_label:"form_TaskEditor_label__2jarJ",TaskEditor_input:"form_TaskEditor_input__xHhj9",TaskEditorinput:"form_TaskEditorinput__1_3N7",TaskEditor_button:"form_TaskEditor_button__jlCgG"}},9:function(t,e,n){t.exports={TaskList:"ContactList_TaskList__1xoOp",TaskList_item:"ContactList_TaskList_item__1jR1s",completed:"ContactList_completed__2jR6V",TaskList_text:"ContactList_TaskList_text__3ppi3",TaskList_actions:"ContactList_TaskList_actions__OFOtn",TaskList_button:"ContactList_TaskList_button__2mdfm"}}},[[19,1,2]]]);
//# sourceMappingURL=main.a8c29912.chunk.js.map